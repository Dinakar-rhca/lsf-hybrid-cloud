#
#-----------------------------------
# Copyright IBM Corp. 1992, 2017. All rights reserved.
# US Government Users Restricted Rights - Use, duplication or disclosure
# restricted by GSA ADP Schedule Contract with IBM Corp.
#-----------------------------------
#
---

- name: Provision the EC2 node that will be VPN and maybe LSF server
  ec2:
    aws_access_key: "{{ AWS_Access_Key }}"
    aws_secret_key: "{{ AWS_Secret_Key }}"
    key_name: "{{ AWS_Key_Name }}"
    group_id: "{{ AWS_VPC_Security_Group }}"
    ec2_url: "{{ AWS_EC2_URL }}"
    instance_type: "{{ AWS_Instance_Type }}"
    region: "{{ AWS_Region }}"
    image: "{{ AWS_Image }}"
    vpc_subnet_id: "{{ AWS_VPC_PRV_Subnet }}"
    assign_public_ip: yes
    source_dest_check: no
    wait: true
    exact_count: 1
    count_tag: foo
    instance_tags:
      Name: VPN-host-SC
  register: ec2
  when:
    - hybrid_cluster is defined
    - hybrid_cluster == true

- name: Provision the EC2 node that will be VPN and maybe LSF Master
  ec2:
    aws_access_key: "{{ AWS_Access_Key }}"
    aws_secret_key: "{{ AWS_Secret_Key }}"
    key_name: "{{ AWS_Key_Name }}"
    group_id: "{{ AWS_VPC_Security_Group }}"
    ec2_url: "{{ AWS_EC2_URL }}"
    instance_type: "{{ AWS_Instance_Type }}"
    region: "{{ AWS_Region }}"
    image: "{{ AWS_Image }}"
    vpc_subnet_id: "{{ AWS_VPC_PRV_Subnet }}"
    assign_public_ip: yes
    source_dest_check: no
    wait: true
    exact_count: 1
    count_tag: foo
    instance_tags:
      Name: VPN-host-MC
    # Would prefer to set the instance profile later, but no API
    instance_profile_name: "{{ AWS_IAM_Role_Name }}"
  register: ec2
  when:
    - multi_cluster is defined
    - multi_cluster == true

- name: Add new instance to host group
  add_host:
    hostname: "{{ item.public_ip }}"
    groupname: vpn_host
  with_items: "{{ ec2.instances }}"

- name: Create an inventory file
  template:
    src: "{{ RC_PLAY_TOP }}/template/inventory-ec2vpn.j2"
    dest: "{{ RC_PLAY_TOP }}/inventory_ec2.yml"
    follow: yes

- name: Wait for SSH to come up
  wait_for:
    host: "{{ item.public_dns_name }}"
    port: 22
    delay: 60
    timeout: 320
    state: started
  with_items: "{{ ec2.instances }}"

- name: Output results of starting EC2 instance
  debug:
    msg: "Our Instance is: {{ ec2.instances }}"

- name: Dump variables for debugging
  template:
    src: template/dumpall.j2
    dest: /tmp/ansible-variables
  when: Debug_Tasks == true

- name: Output
  debug:
    msg: "Debug:  The VPN nodes private IP is {{ hostvars[groups.LSF_Masters[0]]['ec2']['instances'][0]['private_ip'] }}"

